<?php

namespace App;

use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Model;

/**
 * Class Article
 * @package App
 *
 *
 * @property integer $id
 * @property string $created_at
 * @property string $updated_at
 * @property string $title
 * @property string $content
 * @property string $author
 * @property integer $for_index_page_photo_id
 * @property integer $single_page_photo_id
 *
 * @property File $indexPagePhoto
 * @property File $singlePagePhoto
 *
 */
class Article extends Model
{
    /**
     * @var string
     */
    protected $table = 'articles';

    /**
     * @var array
     */
    protected $fillable = [
        'title',
        'content',
        'author',
        'for_index_page_photo_id',
        'single_page_photo_id',
        'title_color'
    ];

    /**
     * @var array
     */
    public $rules = [
        'title' => 'required|string|max:256',
        'content' => 'required|string',
        'author' => 'string|max:128'
    ];


    /**
     * @var bool
     */
    public $timestamps = true;

    public function delete()
    {
        $index = $this->indexPagePhoto;
        $single = $this->singlePagePhoto;
        $photos = $this->getAllPhotos();
        if ($index !== null) $index->delete();
        if ($single !== null) $single->delete();
        if ($photos !== null) {
            foreach ($photos as $photo) {
                $photo->delete();
            }
        }
        return parent::delete(); // TODO: Change the autogenerated stub
    }


    /**
     * @return Collection
     */
    public function getAllPhotos()
    {
        $fileIds = FileConnect::where('foreign_id', $this->id)->where('type', FileConnect::TYPES['article'])->pluck('file_id')->toArray();
        $files = File::whereIn('id', $fileIds)->get();
        return $files;
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasOne|File
     */
    public function indexPagePhoto()
    {
        return $this->hasOne(File::class, 'id','for_index_page_photo_id');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasOne|File
     */
    public function singlePagePhoto()
    {
        return $this->hasOne(File::class, 'id', 'single_page_photo_id');
    }
}
